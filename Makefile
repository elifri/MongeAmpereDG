#---------------------------------------------------------------------
# IGPM, RWTH-Aachen, Alexander Voss, Ralf Massjung, Kolja Brix
#---------------------------------------------------------------------
# usage:    see help label
#---------------------------------------------------------------------
# paths:    include  c++ - header (*.hpp)
#           source   c++ - files (*.cpp)
#           bin      executable binaries
#           doc      html- and latex-files, generated by doxygen
#           config   configuration files
#           data     temp. (!) data files
#---------------------------------------------------------------------
# external paths:
#---------------------------------------------------------------------

# please set the following environment variables
# export PETSC_DIR=/usr/local/gcc-4.1
# export PETSC_ARCH=linux-gnu oder linux-gnu64

# PETSC_DIR    = $(HOME)/lib/petsc
# PETSC_ARCH   = linux-gnu64
# ATLASLINKDIR = $(ATLAS_DIR)

ifeq ($(MODEL),64BIT)

# use 64 bit

PETSC_DIR    = /usr/local/gcc64
PETSC_ARCH   = linux-O2

ATLASLINKDIR = /usr/local/matlab200ab/bin/glnxa64

MPI_DIR      = /usr/local/gcc64/lib

else

# use 32 bit

PETSC_DIR    = /usr/local/gcc
PETSC_ARCH   = linux-gnu-c

ATLASLINKDIR = /usr/local/matlab2007b/bin/glnx86

MPI_DIR      = /usr/local/gcc/lib

endif


ATLASLIB = -llapack -lcblas -lf77blas -latlas 
ATLASLIB = -lmwlapack 

#MPI_LIB      = -Wl,-rpath,$(MPI_DIR) -L$(MPI_DIR) -lmpich -lmpe
MPI_LIB      =  -Wl,-rpath,$(PETSC_DIR)/lib/$(PETSC_ARCH) -lgfortran $(PETSC_DIR)/lib/$(PETSC_ARCH)/libgfortran.so.1

#---------------------------------------------------------------------
# include and link defines
#---------------------------------------------------------------------

PETSCINC   = -I${PETSC_DIR} -I${PETSC_DIR}/bmake/$(PETSC_ARCH) -I${PETSC_DIR}/include -I${PETSC_DIR}/include/mpiuni
PETSC_LIB  = $(PETSC_DIR)/lib/$(PETSC_ARCH)

PETSCLINK  =  -Wl,-rpath,${PETSC_LIB} -L${PETSC_LIB} -lpetscsnes -lpetscksp -lpetscdm -lpetscmat -lpetscvec -lpetsc $(MPI_LIB)
#             -L/usr/X11R6/lib -lX11
	     
ATLASLINK =   -Wl,-rpath,$(ATLASLINKDIR) -L$(ATLASLINKDIR) 

SYSTEMLIB =  -lm 

#---------------------------------------------------------------------
# internal paths:
#---------------------------------------------------------------------

GRDDIR     = ../IGPM_T2_LIB/include
GRDSRCDIR  = ../IGPM_T2_LIB/source
SLVDIR  = include
SRCDIR  = source
BINDIR  = bin
DOCDIR  = doc
CONFDIR = config
DATADIR = data

#---------------------------------------------------------------------
# set MACHINE for compiler environment, e.g., make MACHINE='lx', make MACHINE='shakespeare'
#---------------------------------------------------------------------

CXX = /usr/local/gcc-4.1.1/bin/g++ -m32
#CXX = /usr/insure/bin/insure
#CXXFLAGS = -Wall -I$(GRDDIR) -I$(SLVDIR) -O3 -D NDEBUG
#CXXFLAGS = -Wall -I$(GRDDIR) -I$(SLVDIR) -g -O0 -D DEBUG=4
CXXFLAGS = -Wall -I$(GRDDIR) -I$(SLVDIR) -g -O0 -D DEBUG=1
#CXXFLAGS = -Wall -I$(GRDDIR) -I$(SLVDIR) -g -O2 -D DEBUG=1

ifeq ($(C),gcc410igpm)
CXX = g++
CXXFLAGS = -Wall -I$(GRDDIR) -I$(SLVDIR) -O2 
endif
ifeq ($(C),icc80home)
CXX = /opt/intel/compiler80/bin/icc
CXXFLAGS = -O2 -I./includegrid -I./includesolver -qp
endif
#---------------------------------------------------------------------
ALLINC   = $(wildcard $(GRDDIR)/*.hpp $(SLVDIR)/*.hpp)  Makefile
ALLSRC   = $(wildcard $(SRCDIR)/*.cpp)
#---------------------------------------------------------------------
help:
	@echo "-------------------------------------------------------------------------------"
	@echo
	@echo "usage:"
	@echo
	@echo "1) build project:            make C='compiler' project"
	@echo 
	@echo "   with compiler in "
	@echo "     { gcc33igpm, gcc34igpm, gcc343gpm, gcc401igpm, icc80igpm, "
	@echo "       gcc33home, gcc340home, gcc341home, icc80home }"
	@echo "   default: standard g++"
	@echo
	@echo "   and project in"
	@echo "     { mesh.EULER, mesh.HEAT, mesh.ENTHALPY, mesh.POISSON, mesh.IMPLICIT_HEAT }"
	@echo
	@echo "2) build all projects:       make C='compiler' all"
	@echo 
	@echo "3) build documentation       make doxy"
	@echo 
	@echo "   (main file ./doc/html/index.html)"
	@echo 
	@echo "4) clear project files       make clean"
	@echo 
	@echo "   (remove files, i.e., bin/, doc/"
	@echo 
	@echo "-------------------------------------------------------------------------------"
	@echo 
#-------------------------------------------------------------------------------
# all: mesh 
all: mesh.EULER mesh.HEAT mesh.ENTHALPY mesh.POISSON mesh.POISSON_PREC mesh.IMPLICIT_HEAT 

#===== time-explicit methods =========================================
# mesh: $(BINDIR)/mesh
mesh.EULER: $(BINDIR)/mesh.EULER
#---------------------------------------------------------------------
# $(BINDIR)/mesh: $(ALLINC) $(SRCDIR)/mesh.cpp
#	 $(CXX) $(CXXFLAGS) $(SRCDIR)/mesh.cpp -o $(BINDIR)/mesh
$(BINDIR)/mesh.EULER: $(ALLINC) $(SRCDIR)/mesh.cpp
	$(CXX) $(CXXFLAGS) $(SRCDIR)/mesh.cpp -o $(BINDIR)/mesh.EULER -D EQUATION=EULER_EQ
#---------------------------------------------------------------------
# mesh: $(BINDIR)/mesh
mesh.HEAT: $(BINDIR)/mesh.HEAT
#---------------------------------------------------------------------
# $(BINDIR)/mesh: $(ALLINC) $(SRCDIR)/mesh.cpp
#	 $(CXX) $(CXXFLAGS) $(SRCDIR)/mesh.cpp -o $(BINDIR)/mesh
$(BINDIR)/mesh.HEAT: $(ALLINC) $(SRCDIR)/mesh.cpp
	$(CXX) $(CXXFLAGS) $(SRCDIR)/mesh.cpp -o $(BINDIR)/mesh.HEAT -D EQUATION=HEAT_EQ
#---------------------------------------------------------------------
# mesh: $(BINDIR)/mesh
mesh.ENTHALPY: $(BINDIR)/mesh.ENTHALPY
#---------------------------------------------------------------------
# $(BINDIR)/mesh: $(ALLINC) $(SRCDIR)/mesh.cpp
#	 $(CXX) $(CXXFLAGS) $(SRCDIR)/mesh.cpp -o $(BINDIR)/mesh
$(BINDIR)/mesh.ENTHALPY: $(ALLINC) $(SRCDIR)/mesh.cpp
	$(CXX) $(CXXFLAGS) $(SRCDIR)/mesh.cpp -o $(BINDIR)/mesh.ENTHALPY -D EQUATION=ENTHALPY_EQ
#---------------------------------------------------------------------

#===== use PETSc for time-implicit methods ===========================
# mesh: $(BINDIR)/mesh
mesh.POISSON: $(BINDIR)/mesh.POISSON
#---------------------------------------------------------------------
# $(BINDIR)/mesh: $(ALLINC) $(SRCDIR)/mesh.cpp
#	 $(CXX) $(CXXFLAGS) $(SRCDIR)/mesh.cpp -o $(BINDIR)/mesh
$(BINDIR)/mesh.POISSON: $(BINDIR)/mesh.POISSON.o
	$(CXX) $(CXXFLAGS)  -D EQUATION=POISSON_EQ -D USE_PETSC $(PETSCINC) \
	$(SRCDIR)/mesh.cpp -o $(BINDIR)/mesh.POISSON $(PETSCLINK) $(ATLASLINK) $(SYSTEMLIB) 

$(BINDIR)/mesh.POISSON.o: $(ALLINC) $(SRCDIR)/mesh.cpp
	$(CXX) -c $(CXXFLAGS)  -D EQUATION=POISSON_EQ -D USE_PETSC $(PETSCINC) \
	$(SRCDIR)/mesh.cpp -o $(BINDIR)/mesh.POISSON.o 

#---------------------------------------------------------------------

# mesh: $(BINDIR)/mesh
mesh.POISSON_PREC: $(BINDIR)/mesh.POISSON_PREC
#---------------------------------------------------------------------
# $(BINDIR)/mesh: $(ALLINC) $(SRCDIR)/mesh.cpp
#	 $(CXX) $(CXXFLAGS) $(SRCDIR)/mesh.cpp -o $(BINDIR)/mesh
$(BINDIR)/mesh.POISSON_PREC: $(BINDIR)/mesh.POISSON_PREC.o
	$(CXX) $(CXXFLAGS)  -D EQUATION=POISSON_PREC_EQ -D USE_PETSC $(PETSCINC) \
	$(SRCDIR)/mesh.cpp -o $(BINDIR)/mesh.POISSON_PREC $(PETSCLINK) $(ATLASLINK) $(SYSTEMLIB) 

$(BINDIR)/mesh.POISSON_PREC.o: $(ALLINC) $(SRCDIR)/mesh.cpp
	$(CXX) -c $(CXXFLAGS)  -D EQUATION=POISSON_PREC_EQ -D USE_PETSC $(PETSCINC) \
	$(SRCDIR)/mesh.cpp -o $(BINDIR)/mesh.POISSON_PREC.o 

#---------------------------------------------------------------------

# mesh: $(BINDIR)/mesh
mesh.IMPLICIT_HEAT: $(BINDIR)/mesh.IMPLICIT_HEAT
#---------------------------------------------------------------------
# $(BINDIR)/mesh: $(ALLINC) $(SRCDIR)/mesh.cpp
#	 $(CXX) $(CXXFLAGS) $(SRCDIR)/mesh.cpp -o $(BINDIR)/mesh
$(BINDIR)/mesh.IMPLICIT_HEAT: $(BINDIR)/mesh.IMPLICIT_HEAT.o
	$(CXX) $(CXXFLAGS)  -D EQUATION=IMPLICIT_HEAT_EQ -D USE_PETSC $(PETSCINC) \
	$(SRCDIR)/mesh.cpp -o $(BINDIR)/mesh.IMPLICIT_HEAT $(PETSCLINK) $(ATLASLINK) $(SYSTEMLIB) 

$(BINDIR)/mesh.IMPLICIT_HEAT.o: $(ALLINC) $(SRCDIR)/mesh.cpp
	$(CXX) -c $(CXXFLAGS)  -D EQUATION=IMPLICIT_HEAT_EQ -D USE_PETSC $(PETSCINC) \
	$(SRCDIR)/mesh.cpp -o $(BINDIR)/mesh.IMPLICIT_HEAT.o 

#---------------------------------------------------------------------

# mesh: $(BINDIR)/mesh
mesh.MELTING: $(BINDIR)/mesh.MELTING
#---------------------------------------------------------------------
# $(BINDIR)/mesh: $(ALLINC) $(SRCDIR)/mesh.cpp
#	 $(CXX) $(CXXFLAGS) $(SRCDIR)/mesh.cpp -o $(BINDIR)/mesh
$(BINDIR)/mesh.MELTING: $(BINDIR)/mesh.MELTING.o
	$(CXX) $(CXXFLAGS)  -D EQUATION=MELTING_EQ -D USE_PETSC $(PETSCINC) \
	$(SRCDIR)/mesh.cpp -o $(BINDIR)/mesh.MELTING $(PETSCLINK) $(ATLASLINK) $(SYSTEMLIB) 

$(BINDIR)/mesh.MELTING.o: $(ALLINC) $(SRCDIR)/mesh.cpp
	$(CXX) -c $(CXXFLAGS)  -D EQUATION=MELTING_EQ -D USE_PETSC $(PETSCINC) \
	$(SRCDIR)/mesh.cpp -o $(BINDIR)/mesh.MELTING.o 
#---------------------------------------------------------------------

# mesh: $(BINDIR)/mesh
test_kmesh: $(BINDIR)/test_kmesh
#---------------------------------------------------------------------
# $(BINDIR)/mesh: $(ALLINC) $(SRCDIR)/mesh.cpp
#	 $(CXX) $(CXXFLAGS) $(SRCDIR)/mesh.cpp -o $(BINDIR)/mesh
$(BINDIR)/test_kmesh: $(BINDIR)/test_kmesh.o
	$(CXX) $(CXXFLAGS)  -D EQUATION=POISSON_PREC_EQ -D USE_PETSC $(PETSCINC) \
	$(SRCDIR)/test_kmesh.cpp -o $(BINDIR)/test_kmesh $(PETSCLINK) $(ATLASLINK) $(SYSTEMLIB) 

$(BINDIR)/test_kmesh.o: $(ALLINC) $(SRCDIR)/test_kmesh.cpp
	$(CXX) -c $(CXXFLAGS)  -D EQUATION=POISSON_PREC_EQ -D USE_PETSC $(PETSCINC) \
	$(SRCDIR)/test_kmesh.cpp -o $(BINDIR)/test_kmesh.o 

#=====================================================================
doxy:
	cd $(DOCDIR) && doxygen mesh.doxy
#---------------------------------------------------------------------
clean:
	rm -r $(BINDIR)/* $(DOCDIR)/html/* 2> /dev/null
#---------------------------------------------------------------------
